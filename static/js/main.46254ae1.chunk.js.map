{"version":3,"sources":["components/card/Card.js","components/card-list/CardList.js","API.js","components/search-box/SearchBox.js","App.js","index.js"],"names":["Card","monster","name","email","id","className","src","alt","CardList","monsters","map","fetchRobots","a","fetch","res","json","data","SearchBox","handleSearch","type","placeholder","onChange","App","useState","setMonsters","search","setSearch","useEffect","then","e","target","value","length","filter","toLowerCase","includes","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"4QAYeA,EARF,SAAC,GAAD,QAAGC,QAAWC,EAAd,EAAcA,KAAMC,EAApB,EAAoBA,MAAOC,EAA3B,EAA2BA,GAA3B,OACX,sBAAKC,UAAU,iBAAf,UACE,qBAAKC,IAAG,+BAA0BF,EAA1B,0BAAsDG,IAAI,YAClE,6BAAKL,IACL,4BAAIC,QCIOK,G,MARE,SAAC,GAAD,IAAGC,EAAH,EAAGA,SAAH,OACf,qBAAKJ,UAAU,YAAf,SACGI,EAASC,KAAI,SAACT,GAAD,OACZ,cAAC,EAAD,CAAuBA,QAASA,GAArBA,EAAQG,W,+BCDVO,EANE,uCAAG,8BAAAC,EAAA,sEACAC,MAAM,8CADN,cACZC,EADY,gBAECA,EAAIC,OAFL,cAEZC,EAFY,yBAGXA,GAHW,2CAAH,qDCSFC,G,MANG,SAAC,GAAD,IAAGC,EAAH,EAAGA,aAAH,OAChB,mCACE,uBAAOb,UAAU,SAASc,KAAK,SAASC,YAAY,kBAAkBC,SAAUH,QCyBrEI,EAxBH,WACV,MAAgCC,mBAAS,IAAzC,mBAAOd,EAAP,KAAiBe,EAAjB,KACA,EAA4BD,mBAAS,IAArC,mBAAOE,EAAP,KAAeC,EAAf,KASA,OAHAC,qBAAU,WACRhB,IAAciB,MAAK,SAACZ,GAAD,OAAUQ,EAAYR,QACxC,IAED,sBAAKX,UAAU,MAAf,UACE,kDACA,cAAC,EAAD,CAAWa,aATM,SAACW,GACpBH,EAAUG,EAAEC,OAAOC,UAShBN,EAAOO,OAAS,EACf,cAAC,EAAD,CAAUvB,SAZdA,EAASwB,QAAO,SAAChC,GAAD,OAAaA,EAAQC,KAAKgC,cAAcC,SAASV,EAAOS,oBAcpE,cAAC,EAAD,CAAUzB,SAAUA,QCpB5B2B,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,W","file":"static/js/main.46254ae1.chunk.js","sourcesContent":["import React from 'react';\n\nimport './Card.styles.css';\n\nconst Card = ({ monster: { name, email, id } }) => (\n  <div className=\"card-container\">\n    <img src={`https://robohash.org/${id}?set=set2&size=180x180`} alt=\"monster\" />\n    <h2>{name}</h2>\n    <p>{email}</p>\n  </div>\n);\n\nexport default Card;\n","import React from 'react';\nimport Card from '../card/Card';\nimport './CardList.styles.css';\n\nconst CardList = ({ monsters }) => (\n  <div className=\"card-list\">\n    {monsters.map((monster) => (\n      <Card key={monster.id} monster={monster} />\n    ))}\n  </div>\n);\n\nexport default CardList;\n","const fetchRobots = async () => {\n  const res = await fetch('https://jsonplaceholder.typicode.com/users');\n  const data = await res.json();\n  return data;\n};\n\nexport default fetchRobots;\n","import React from 'react';\nimport './SearchBox.styles.css';\n\nconst SearchBox = ({ handleSearch }) => (\n  <>\n    <input className=\"search\" type=\"search\" placeholder=\"Search monsters\" onChange={handleSearch} />\n  </>\n);\n\nexport default SearchBox;\n","import React, { useState, useEffect } from 'react';\nimport CardList from './components/card-list/CardList';\nimport './App.css';\nimport fetchRobots from './API';\nimport SearchBox from './components/search-box/SearchBox';\n\nconst App = () => {\n  const [monsters, setMonsters] = useState([]);\n  const [search, setSearch] = useState('');\n  const filteredMonsters = () =>\n    monsters.filter((monster) => monster.name.toLowerCase().includes(search.toLowerCase()));\n  const handleSearch = (e) => {\n    setSearch(e.target.value);\n  };\n  useEffect(() => {\n    fetchRobots().then((data) => setMonsters(data));\n  }, []);\n  return (\n    <div className=\"App\">\n      <h1>Monsters Rolodex</h1>\n      <SearchBox handleSearch={handleSearch} />\n      {search.length > 0 ? (\n        <CardList monsters={filteredMonsters()} />\n      ) : (\n        <CardList monsters={monsters} />\n      )}\n    </div>\n  );\n};\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}